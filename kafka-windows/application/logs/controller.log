[2023-02-19 16:00:20,925] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-19 16:00:20,975] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-02-19 16:00:20,983] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-02-19 16:00:21,015] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-19 16:00:21,019] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-19 16:00:21,023] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-19 16:00:21,026] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-19 16:00:21,053] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 25) (kafka.controller.KafkaController)
[2023-02-19 16:00:21,059] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-19 16:00:21,063] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-19 16:00:21,074] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-19 16:00:21,074] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-19 16:00:21,075] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2023-02-19 16:00:21,075] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2023-02-19 16:00:21,075] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-19 16:00:21,078] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,078] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,078] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-19 16:00:21,079] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2023-02-19 16:00:21,080] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-19 16:00:21,095] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:00:21,095] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:00:21,110] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:00:21,111] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:00:21,111] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:00:21,111] INFO [RequestSendThread controllerId=1] Controller 1 connected to PHANTOM01:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-19 16:00:21,112] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:00:21,116] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:00:21,117] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-02-19 16:00:21,121] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,121] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,121] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,122] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-19 16:00:21,123] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-19 16:00:21,134] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-19 16:00:26,141] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:00:26,142] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:00:29,318] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-19 16:00:29,319] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-19 16:00:29,323] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-19 16:00:29,327] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-19 16:00:29,333] INFO [RequestSendThread controllerId=1] Controller 1 connected to PHANTOM01:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-19 16:00:29,334] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2023-02-19 16:00:29,336] INFO [Controller id=1] Updated broker epochs cache: Map(2 -> 45, 1 -> 25) (kafka.controller.KafkaController)
[2023-02-19 16:00:29,398] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-19 16:00:29,421] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-19 16:05:26,157] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:05:26,157] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:09:29,908] INFO [Controller id=1] New topics: [Set(customer_topic)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(customer_topic,Some(SKobTrCqThmGFicxmXHtKQ),Map(customer_topic-1 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=), customer_topic-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-19 16:09:29,909] INFO [Controller id=1] New partition creation callback for customer_topic-1,customer_topic-0 (kafka.controller.KafkaController)
[2023-02-19 16:10:26,170] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:10:26,170] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:10:26,171] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:10:26,172] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:10:26,172] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:10:26,172] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:15:26,185] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:20:26,200] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:25:26,207] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:30:26,215] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:35:26,230] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:37:19,390] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-19 16:37:19,419] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-02-19 16:37:19,422] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2023-02-19 16:37:19,426] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-19 16:37:19,429] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-19 16:37:19,436] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2023-02-19 16:37:19,447] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 88) (kafka.controller.KafkaController)
[2023-02-19 16:37:19,469] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-02-19 16:37:19,483] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-19 16:37:19,489] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-02-19 16:37:19,489] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2023-02-19 16:37:19,489] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2023-02-19 16:37:19,489] INFO [Controller id=2] Current list of topics in the cluster: Set(customer_topic) (kafka.controller.KafkaController)
[2023-02-19 16:37:19,489] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-19 16:37:19,496] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-19 16:37:19,496] INFO [Controller id=2] List of topics ineligible for deletion: customer_topic (kafka.controller.KafkaController)
[2023-02-19 16:37:19,497] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-19 16:37:19,497] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(customer_topic) (kafka.controller.TopicDeletionManager)
[2023-02-19 16:37:19,498] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-19 16:37:19,509] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:37:19,523] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:37:19,531] INFO [RequestSendThread controllerId=2] Controller 2 connected to PHANTOM01:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-19 16:37:19,557] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:37:19,594] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=customer_topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=customer_topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=customer_topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=customer_topic,Partition=0,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:37:19,594] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:37:19,599] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:37:19,626] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(customer_topic-0 -> OnlinePartition, customer_topic-1 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:37:19,626] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-02-19 16:37:19,633] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:37:19,633] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:37:19,634] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-19 16:37:19,634] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-19 16:37:19,635] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-19 16:37:19,646] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-19 16:37:24,664] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:37:24,664] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:37:24,667] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map(customer_topic-1 -> Vector(1, 2)) (kafka.controller.KafkaController)
[2023-02-19 16:37:24,669] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-19 16:37:24,670] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-19 16:37:24,670] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:37:24,670] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:40:11,484] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-19 16:40:11,530] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2023-02-19 16:40:11,534] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-19 16:40:11,539] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-19 16:40:11,544] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-19 16:40:11,548] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-19 16:40:11,569] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 110) (kafka.controller.KafkaController)
[2023-02-19 16:40:11,590] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-19 16:40:11,603] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-19 16:40:11,614] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-19 16:40:11,614] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-19 16:40:11,614] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2023-02-19 16:40:11,614] INFO [Controller id=1] Current list of topics in the cluster: Set(customer_topic) (kafka.controller.KafkaController)
[2023-02-19 16:40:11,615] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-19 16:40:11,620] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-19 16:40:11,620] INFO [Controller id=1] List of topics ineligible for deletion: customer_topic (kafka.controller.KafkaController)
[2023-02-19 16:40:11,620] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-19 16:40:11,621] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(customer_topic) (kafka.controller.TopicDeletionManager)
[2023-02-19 16:40:11,622] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-19 16:40:11,636] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:40:11,652] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:40:11,659] INFO [RequestSendThread controllerId=1] Controller 1 connected to PHANTOM01:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-19 16:40:11,699] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:40:11,742] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=customer_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=customer_topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=customer_topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=customer_topic,Partition=0,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-19 16:40:11,743] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:40:11,752] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:40:11,803] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(customer_topic-0 -> OfflinePartition, customer_topic-1 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-19 16:40:11,804] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2023-02-19 16:40:11,809] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:40:11,810] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-19 16:40:11,810] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-19 16:40:11,810] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-19 16:40:11,811] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-19 16:40:11,822] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-19 16:40:16,824] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:40:16,825] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:40:16,827] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(customer_topic-1 -> Vector(1, 2)) (kafka.controller.KafkaController)
[2023-02-19 16:40:16,828] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-19 16:40:16,830] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-19 16:40:16,830] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(customer_topic-0 -> Vector(2, 1)) (kafka.controller.KafkaController)
[2023-02-19 16:40:16,830] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-19 16:40:16,830] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-19 16:40:23,258] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-19 16:40:23,259] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-19 16:40:23,263] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-19 16:40:23,264] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-19 16:40:23,267] INFO [RequestSendThread controllerId=1] Controller 1 connected to PHANTOM01:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-19 16:40:23,297] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2023-02-19 16:40:23,298] INFO [Controller id=1] Updated broker epochs cache: Map(2 -> 130, 1 -> 110) (kafka.controller.KafkaController)
[2023-02-19 16:40:23,328] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-19 16:40:23,343] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-19 16:40:24,629] DEBUG [Controller id=1] Updating ISRs for partitions: Set(customer_topic-1). (kafka.controller.KafkaController)
[2023-02-19 16:40:24,635] DEBUG [Controller id=1] ISR for partition customer_topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-02-19 16:40:24,650] DEBUG [Controller id=1] Updating ISRs for partitions: Set(customer_topic-0). (kafka.controller.KafkaController)
[2023-02-19 16:40:24,655] DEBUG [Controller id=1] ISR for partition customer_topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=4). (kafka.controller.KafkaController)
[2023-02-19 16:40:26,968] INFO [Controller id=1] New topics: [Set(product_topic)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(product_topic,Some(CI0S6rqcScKBkuU9O6bK2Q),Map(product_topic-1 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=), product_topic-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-19 16:40:26,969] INFO [Controller id=1] New partition creation callback for product_topic-1,product_topic-0 (kafka.controller.KafkaController)
[2023-02-19 16:45:16,839] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:45:16,839] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:45:16,839] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(customer_topic-1 -> Vector(1, 2)) (kafka.controller.KafkaController)
[2023-02-19 16:45:16,839] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.5 (kafka.controller.KafkaController)
[2023-02-19 16:45:16,840] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions customer_topic-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-19 16:45:16,854] INFO [Controller id=1] Partition customer_topic-1 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2023-02-19 16:45:16,854] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:45:16,854] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:47:44,912] DEBUG [Controller id=1] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-02-19 16:47:44,916] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-02-19 16:47:55,474] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(lx9XMe42Qs2ybvJLOyUCjQ),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-19 16:47:55,476] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-02-19 16:50:16,870] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:50:16,870] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:50:16,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:50:16,871] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:50:16,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:50:16,871] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:55:16,887] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-19 16:55:16,887] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-19 16:55:16,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-19 16:55:16,888] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-19 16:55:16,888] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-19 16:55:16,888] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
