# Implementando Docker e Docker-compose
--------------------------------------------------------------------------------------------------------------------------------------------------------------

1° Passo ->

Baixe o Docker Desktop for Windows;
Faça a instalação;

Baixe a ultima versão WSL2 Linux Kernel updatepackage for 64 machines / Step 4
https://learn.microsoft.com/en-us/windows/wsl/install-manual

--------------------------------------------------------------------------------------------------------------------------------------------------------------

2° Passo -> 

Abra o docker Desktop
Abra o PowerShell ou CMD
Baixe os arquivos para teste
https://gitlab.com/software-engineering-class/template
Acesse o diretório com os arquivos pelo PowerShell ou CMD
Digite o seguinte comando: docker-compose up --build
Abra o arquivo: docker-composer.yml pelo VSCODE, verifique a porta do: phpmyadmin (4001)
Acesse pelo browser: localhost:4001

# Implementando Apache Kafka
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
1° Passo ->
 
Download no site https://kafka.apache.org/downloads
Binary downloads: Scala 2.12  - kafka_2.12-3.4.0.tgz (asc, sha512)
 
# Extrair arquivo baixado e copiar conteudo

--------------------------------------------------------------------------------------------------------------------------------------------------------------
2° Passo -> 
 
# Criar estrutura de pastas pasta
 
D:\ 
|------Kafka    
|---------application
|------------Conteudo (Colar conteudo da pasta de DOWNLOAD Aqui)
|---------data
|------------zookeeper
|---------tmp
|------------kafka-logs
|---------------1
|---------------2
|---------batch
 
Ou se prefereir, abrir o Prompt de comando e executar os seguintes comandos (pressione WIN + R, escreva cmd e aperte enter):

D:\Github\kafka

D:
mkdir D:\Github\kafka
mkdir D:\Github\kafka\application
mkdir D:\Github\kafka\data
mkdir D:\Github\kafka\data\zookeeper
mkdir D:\Github\kafka\tmp
mkdir D:\Github\kafka\tmp\kafka-logs
mkdir D:\Github\kafka\tmp\kafka-logs\1
mkdir D:\Github\kafka\tmp\kafka-logs\2
mkdir D:\Github\kafka\batch
 
Caso o seu Disco Local não seja particionado, e você apenas possua um, utilize "C:    "   
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
3° Passo ->
 
# Abrir pasta D:\Kafka\application\config\
copiar arquivo server.properties e colar duas vezes o mesmo conteudo e renomear com os nomes abaixo
- server1.properties 
- server2.properties
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
4° Passo ->
 
Editar arquivo D:\Kafka\application\config\server1.properties
- Setar broker id = 1 
broker.id=1
 
- Descomentar a linha e setar porta 9092 para o server1
listeners=PLAINTEXT://:9092
 
- Setar diretório de logs para o diretório criado para o server1
- Atente-se para mudar a barra do diretório!
D:/Github/kafka/tmp/kafka-logs/1
 
- Numero de partições por topico setar 2
num.partitions=2 
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
5° Passo ->
 
Editar arquivo D:\Kafka\application\config\server2.properties
- Setar broker id = 2
broker.id=2
 
- Descomentar a linha e setar porta 9093 para o server2
listeners=PLAINTEXT://:9093
 
- Setar diretório de logs para o diretório criado para o server1
- Atente-se para mudar a barra do diretório!
D:/Github/kafka/tmp/kafka-logs/2
 
- Numero de partições por topico setar 2
num.partitions=2 
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
6° Passo ->
 
Editar o arquivo D:\Kafka\application\config\zookeeper.properties
 
- Setar o diretorio de dados(datadir) para o zookeeper
- Atente-se para mudar a barra do diretório!

dataDir=D:/Github/kafka/data/zookeeper
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
7° Passo ->
 
Abra o Prompt de comando e execute os comandos a seguir:
 
# Batch para Inicializar o Zookeeper e Kafka cluster
 
echo start D:\Github\kafka\application\bin\windows\zookeeper-server-start.bat D:\Github\kafka\application\config\zookeeper.properties > D:\Github\kafka\batch\Start_Zookeeper.bat
 
# Batch para Inicializar o Servidor 1 Kafka
echo start D:\Github\kafka\application\bin\windows\kafka-server-start.bat D:\Github\kafka\application\config\server1.properties > D:\Github\kafka\batch\Start_Kafka_Server1.bat
 
# Batch para Inicializar o Servidor 2 Kafka
echo start D:\Github\kafka\application\bin\windows\kafka-server-start.bat D:\Github\kafka\application\config\server2.properties > D:\Github\kafka\batch\Start_Kafka_Server2.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
8° Passo ->
 
# Abra as batchs criadas para inicializar o cluster
 
- Start_Zookeper.bat
- Start_Kafka_Server1.bat
- Start_Kafka_Server2.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
9° Passo ->
 
# Vamos criar dois topicos para teste
 
# Batch para criar topico customer
 
echo start D:\Github\kafka\application\bin\windows\kafka-topics.bat --create --topic customer_topic --bootstrap-server localhost:9092 --replication-factor 2 --partitions 2 > D:\Github\kafka\batch\Create_customer_topic.bat
 
# Batch para criar topico product
 
echo start D:\Github\kafka\application\bin\windows\kafka-topics.bat --create --topic product_topic  --bootstrap-server localhost:9092 --replication-factor 2 --partitions 2 > D:\Github\kafka\batch\Create_product_topic.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
10° Passo -> 
 
# Vamos agora, iniciar o serviço de producer e consumer, para assim podermos enviar e receber mensagens atraves do kafka broker (customer_topic)
 
# Batch para inicializar o serviço de producer para o topico customer_topic
 
echo start D:\Github\kafka\application\bin\windows\kafka-console-producer.bat --topic customer_topic --broker-list localhost:9092,localhost:9093 > D:\Github\kafka\batch\Producer_customer_topic.bat
 
# Vamos agora, criar a batch para iniciar o serviço de consumer, par aassim podermos receber mensagens do kafka broker (customer_topic)
 
echo start D:\Github\kafka\application\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --from-beginning --topic customer_topic > D:\Github\kafka\batch\Consumer_customer_topic.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
11° Passo -> 
 
# Vamos, iniciar o serviço de producer e consumer, para assim podermos enviar e receber mensagens atraves do kafka broker (product_topic)
 
# Batch para inicializar o serviço de producer para o topico product_topic
 
echo start D:\Github\kafka\application\bin\windows\kafka-console-producer.bat --topic product_topic --broker-list localhost:9092,localhost:9093 > D:\Github\kafka\batch\Producer_product_topic.bat
 
# Vamos, criar a batch para iniciar o serviço de consumer, par aassim podermos receber mensagens do kafka broker (product_topic)
 
echo start D:\Github\kafka\application\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9092 --from-beginning --topic product_topic > D:\Github\kafka\batch\Consumer_product_topic.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
12° Passo ->
 
# Vamos Verificar e descrever o status dos topicos do kafka
 
# Batch para descrever o status do kafka para o topico customer_topic
 
echo start D:\Github\kafka\application\bin\windows\kafka-topics.bat --describe --bootstrap-server localhost:9092 --topic customer_topic > D:\Github\kafka\batch\Status_customer_topic.bat
 
# Batch para descrever o status do kafka para o topico product_topic
 
echo start D:\Github\kafka\application\bin\windows\kafka-topics.bat --describe --bootstrap-server localhost:9092 --topic product_topic > D:\Github\kafka\batch\Status_product_topic.bat
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 
Fim !! 
 
Se você chegou até o final e obteve êxito, parabéns ! você ja é capaz de implementar o apache kafka em ambiente windows\kafka-console-consumer

Atualizado 2023
Créditos: https://www.youtube.com/watch?v=yIjXO05Y-B0